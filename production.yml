version: "3.9"

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}

services:
  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: parts_postgres
    container_name: parts_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
    env_file:
      - ./.envs/.production/.postgres
    networks:
      - back
    labels:
      - traefik.enable=false

  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: parts_production_django
    container_name: parts_django
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    volumes:
      - ./src:/app:z
    labels:
      - "traefik.http.routers.django.rule=Host(`parts.luidorbus.ru`)"
      - "traefik.http.routers.django.tls=true"
      - "traefik.http.routers.django.tls.certresolver=letsencrypt"
      - "traefik.http.routers.django.priority=2"
      - "traefik.http.routers.django.entryPoints=web-secure"
      - "traefik.http.routers.django.middlewares=csrf"
      - traefik.port=80
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - front
      - back
    command: /start

  redis:
    image: redis:5.0
    container_name: parts_redis
    networks:
      - back

  celeryworker:
    <<: *django
    image: parts_production_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
    networks:
      - back   
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: parts_production_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
    networks:
      - back
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: parts_production_flower
    container_name: flower
    ports:
      - "5555:5555"
    networks:
      - front
      - back
    labels:
      - traefik.http.routers.flower.rule=Host(`parts.luidorbus.ru`)
      - traefik.http.services.flower.loadbalancer.server.port=5555
      - traefik.http.routers.flower.tls=true
      - traefik.http.routers.flower.tls.certresolver=letsencrypt
      - "traefik.http.routers.flower.entryPoints=web-secure"
      - traefik.port=5555
    command: /start-flower

networks:
  front:
    external:
      name: front
  back:
    external: false
    